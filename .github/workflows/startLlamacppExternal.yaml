name: startLlamacppExternal

on:
  workflow_dispatch: # This allows the workflow to be triggered manually

permissions:
  contents: read

jobs:
  xtts_v2:
    runs-on: ubuntu-latest
    environment: LLama  # This specifies that the secret is from the "LLama" environment

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'
      env:
        NGROK_SECRET: ${{ secrets.NGROK_SECRET }}  # Pass secret to this step

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install openai
      env:
        NGROK_SECRET: ${{ secrets.NGROK_SECRET }}  # Pass secret to this step

    - name: Getting the files
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update -y
        sudo apt install ngrok -y
        
        # Ensure ngrok is configured with the auth token from GitHub secret
        echo "${{ secrets.NGROK_SECRET }}" | ngrok config add-authtoken
        
        wget https://huggingface.co/microsoft/Phi-3-mini-4k-instruct-gguf/resolve/main/Phi-3-mini-4k-instruct-q4.gguf
        mv Phi-3-mini-4k-instruct-q4.gguf /tmp/llama-model.gguf
        docker pull ghcr.io/abetlen/llama-cpp-python:v0.2.79
      env:
        NGROK_SECRET: ${{ secrets.NGROK_SECRET }}  # Pass secret to this step

    - name: Running Server
      run: |
        docker run -d  -p 8000:8000 -v /tmp:/models -e MODEL=/models/llama-model.gguf ghcr.io/abetlen/llama-cpp-python:v0.2.79
        # Run ngrok to expose the local server
        ngrok http 8000  # This tells ngrok to expose port 8000
      env:
        NGROK_SECRET: ${{ secrets.NGROK_SECRET }}  # Pass secret to this step
